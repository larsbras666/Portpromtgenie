# .github/workflows/android.yml
name: Android APK

on:
  push:
    branches: [ main ]
    paths:
      - "**/*.py"
      - buildozer.spec
      - ".github/workflows/android.yml"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 60

    # Buildozer läser ANDROID_(SDK|HOME) om de finns
    env:
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
      ANDROID_HOME:      ${{ github.workspace }}/android-sdk
      PIP_DISABLE_PIP_VERSION_CHECK: '1'

    steps:
    # ─────────────────────────────────────────────────────────
    - name: 📥 Check out code
      uses: actions/checkout@v4

    # ─────────────────────────────────────────────────────────
    # 1) Host‑JDK 17 (krav för cmdline‑tools ≥ 9‑.*)
    - name: ☕ Set up Temurin 17
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 17

    # ─────────────────────────────────────────────────────────
    # 2) Alla systemberoenden – inkluderar autotools för libffi
    - name: 🛠️ Install system packages
      run: |
        sudo apt-get update -y
        sudo apt-get install -y --no-install-recommends \
          zip unzip wget git ca-certificates \
          build-essential libssl-dev libffi-dev python3-pip \
          autoconf automake libtool pkg-config gawk

    # ─────────────────────────────────────────────────────────
    # 3) Android SDK (cmdline‑tools) med cache
    - name: 💾 Cache Android SDK
      id: cache-sdk
      uses: actions/cache@v4
      with:
        path: ${{ env.ANDROID_SDK_ROOT }}
        key: android-sdk-${{ runner.os }}-v2

    - name: 📦 Download cmdline-tools (if cache miss)
      if: steps.cache-sdk.outputs.cache-hit != 'true'
      run: |
        mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O /tmp/cmdline.zip
        unzip -q /tmp/cmdline.zip -d "$ANDROID_SDK_ROOT/cmdline-tools"
        mv "$ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools" "$ANDROID_SDK_ROOT/cmdline-tools/latest"

    - name: ✅ Accept licenses & install platform/NDK
      run: |
        export PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$PATH
        yes | sdkmanager --licenses
        sdkmanager \
          "platform-tools" \
          "build-tools;34.0.0" \
          "platforms;android-34" \
          "ndk;25.2.9519653"

    # ─────────────────────────────────────────────────────────
    # 4) Buildozer + python-for-android
    - name: 🐍 Install Buildozer toolchain
      run: |
        python -m pip install --upgrade --user "buildozer[android]==1.*" cython
        echo "$HOME/.local/bin" >> "$GITHUB_PATH"

    # ─────────────────────────────────────────────────────────
    # 5) Bygg APK
    - name: 🏗️ Build APK (debug)
      run: |
        export PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/platform-tools:$PATH
        buildozer android debug --verbose

    # ─────────────────────────────────────────────────────────
    # 6) Ladda upp artefakt
    - name: 📤 Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: portpromptgenie-debug
        path: bin/*.apk