name: Android APK

on:
  push:
    branches: [main]
    paths:
      - "**/*.py"
      - buildozer.spec
      - .github/workflows/android.yml
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 60

    env:
      PYTHON_VERSION: "3.11"
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
      ANDROID_HOME:      ${{ github.workspace }}/android-sdk
      PIP_DISABLE_PIP_VERSION_CHECK: "1"

    steps:
    # ─────────────────────────────────────────────────────────
    - name: 📥 Check out code
      uses: actions/checkout@v4

    - name: 🐍 Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: ☕ Set up Temurin 17
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 17

    - name: 🛠️ Install system packages
      run: |
        sudo apt-get update -y
        sudo apt-get install -y --no-install-recommends \
          build-essential autoconf automake m4 \
          libtool libtool-bin libltdl-dev pkg-config \
          zip unzip wget git ca-certificates \
          libffi-dev libssl-dev python3-pip

    - name: 💾 Cache Android SDK
      uses: actions/cache@v4
      id: cache-sdk
      with:
        path: ${{ env.ANDROID_SDK_ROOT }}
        key: android-sdk-${{ runner.os }}-v5   # bumpa när du vill tömma cachen

    - name: 📦 Download cmdline‑tools (if cache miss)
      if: steps.cache-sdk.outputs.cache-hit != 'true'
      run: |
        mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O /tmp/cmdline.zip
        unzip -q /tmp/cmdline.zip -d "$ANDROID_SDK_ROOT/cmdline-tools"
        mv "$ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools" "$ANDROID_SDK_ROOT/cmdline-tools/latest"

    - name: ✅ Accept licenses & install platform/NDK
      run: |
        export PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$PATH
        yes | sdkmanager --licenses
        sdkmanager "platform-tools" "build-tools;34.0.0" "platforms;android-34" "ndk;25.2.9519653"

    # ─── Python‑/Buildozer‑toolchain ─────────────────────────
    - name: 🐍 Install Buildozer + pinned deps
      run: |
        # uppdatera pip & bygghjul
        python -m pip install --upgrade pip setuptools wheel
        # Cython <3 krävs av p4a just nu
        python -m pip install "Cython<3"
        # stabil p4a‑release + buildozer
        python -m pip install python-for-android==2024.4.23 "buildozer==1.*"
        # se till att ~/.local/bin finns i PATH för följande steg
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: 🔄 Clean previous state
      run: |
        buildozer android clean || true

    - name: 🏗️ Build APK (debug)
      run: |
        export PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/platform-tools:$PATH
        buildozer android debug --storage-dir "$GITHUB_WORKSPACE/.p4a-build"

    - name: 📤 Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: PortpromptGenie-debug
        path: bin/*.apk